// 二货小易有一个W*H的网格盒子，网格的行编号为0~H-1，网格的列编号为0~W-1。
// 每个格子至多可以放一块蛋糕，任意两块蛋糕的欧几里得距离不能等于2。
// 对于两个格子坐标(x1,y1),(x2,y2)的欧几里得距离为:
// ((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2))的算术平方根。
// 小易想知道最多可以放多少块蛋糕在网格盒子里。


/*
 1. 找规律
 . 为蛋糕 * 代表不能存放
 
 . . * * . . * *
 . . * * . . * *
 * * . . * * . .
 * * . . * * . .
 蛋糕从左上角开始放， 存在以上规律
 
 将行列数分割成（r*(4) + R) * (c*(4) + C)
 可得蛋糕数为 r*c*8 + r*2*C + c*2*R + oth[R][C]
 oth为边角存放蛋糕数
 
 2. 将每个点按顺序模拟一遍
 
*/


#include<iostream>
using namespace std;

int main()
{
    int col, row;
    cin >> row >> col;
    
    int oth[4][4] = {0};
    oth[1][1] = 1, oth[1][2] = 2, oth[1][3] = 2;
    oth[2][1] = 2, oth[2][2] = 4, oth[2][3] = 4;
    oth[3][1] = 2, oth[3][2] = 4, oth[3][3] = 5;
    
    int r = row / 4, R = row % 4;
    int c = col / 4, C = col % 4;
    
    cout << r * c * 8 + r * 2 * C + c * 2 * R + oth[R][C];
    
    
    return 0;
}